services:
  all:
    image: alpine
    command: sh -C "echo start"
    platform: linux/amd64
    depends_on:
      - all-kafka
      - consumers
      - mini-app
      - producers

  all-kafka:
    image: alpine
    command: sh -C "echo start"
    platform: linux/amd64
    depends_on:
      - rest-proxy
      - schema-registry

  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: '2181'
      ZOOKEEPER_TICK_TIME: '2000'

  broker-1:
    image: confluentinc/cp-kafka:7.8.0
    hostname: broker-1
    container_name: broker-1
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: broker-1
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_IN_NETWORK:PLAINTEXT,LISTENER_HOST:PLAINTEXT
      # KFAKA_LISTENERS: LISTENER_IN_NETWORK://0.0.0.0:9092,LISTENER_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_IN_NETWORK://broker-1:29092,LISTENER_HOST://broker-1:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_IN_NETWORK
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  broker-2:
    image: confluentinc/cp-kafka:7.8.0
    hostname: broker-2
    container_name: broker-2
    depends_on:
      - zookeeper
    ports:
      - 9093:9093
      - 29093:29093
    environment:
      KAFKA_ADVERTISED_HOST_NAME: broker-2
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_IN_NETWORK:PLAINTEXT,LISTENER_HOST:PLAINTEXT
      # KFAKA_LISTENERS: LISTENER_IN_NETWORK://0.0.0.0:9093,LISTENER_HOST://0.0.0.0:29093
      KAFKA_ADVERTISED_LISTENERS: LISTENER_IN_NETWORK://broker-2:29093,LISTENER_HOST://broker-2:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_IN_NETWORK
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  broker-3:
    image: confluentinc/cp-kafka:7.8.0
    hostname: broker-3
    container_name: broker-3
    depends_on:
      - zookeeper
    ports:
      - 9094:9094
      - 29094:29094
    environment:
      KAFKA_ADVERTISED_HOST_NAME: broker-3
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_IN_NETWORK:PLAINTEXT,LISTENER_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: LISTENER_IN_NETWORK://broker-3:29094,LISTENER_HOST://broker-3:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_IN_NETWORK
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  rest-proxy:
    image: confluentinc/cp-kafka-rest:7.8.0
    hostname: rest-proxy
    container_name: rest-proxy
    depends_on:
      - broker-1
      - broker-2
      - broker-3
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'broker-1:29092,broker-2:29093,broker-3:29094'
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082

  schema-registry:
    image: confluentinc/cp-schema-registry:7.8.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker-1
      - broker-2
      - broker-3
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker-1:29092,broker-2:29093,broker-3:29094'
      # SCHEMA_REGISTRY_LISTENERS: https://0.0.0.0:8081
      # SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "https"
      # SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      # SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
      # SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: 2

  consumers:
    build:
      context: .
      dockerfile: app/Dockerfile
      target: consumers-dev
    depends_on:
      - rest-proxy
      - schema-registry
    ports:
      - 9339:9339
    volumes:
      - ./app:/opt/mini-app
      - /opt/mini-app/node_modules

  mini-app:
    build:
      context: .
      dockerfile: app/Dockerfile
      target: mini-app-dev
    depends_on:
      - rest-proxy
      - schema-registry
    ports:
      - 9337:9337
    volumes:
      - ./app:/opt/mini-app
      - /opt/mini-app/node_modules

  producers:
    build:
      context: .
      dockerfile: app/Dockerfile
      target: producers-dev
    depends_on:
      - rest-proxy
      - schema-registry
    ports:
      - 9338:9338
    volumes:
      - ./app:/opt/mini-app
      - /opt/mini-app/node_modules
